import{r as m,g as te,c as V,o as I,d as M,w as N,e as A,L as oe,E as W,b as p,C as F,f as z,i as le,k as ne}from"./index-B3ZjBOUV.js";import{P as B}from"./papaparse.min-C1TQFing.js";import{_ as se}from"./_plugin-vue_export-helper-DlAUqK2U.js";const ie={class:"map-container"},ce={class:"card-header"},ue={class:"header-controls"},re={key:0,class:"loading-container"},de={key:1,class:"map-wrapper"},ve={class:"map-stats"},me={class:"map"},fe=["width","height"],he={class:"controls"},O=50,pe={__name:"MapVisualization",setup(ge){const y=m(1200),x=m(800),_=m(null);let n=null;const r=m(1),f=m({x:0,y:0}),E=m(!1),k=m({x:0,y:0});m(null),m(null);const b=m(!1),h=m([]),w=m([]),g=m({}),L=e=>e*r.value+f.value.x,Y=e=>e*r.value+f.value.y,C=()=>{if(!n)return;n.fillStyle="#F0F0F0",n.fillRect(0,0,y.value,x.value);const e=0,o=0,a=y.value,t=x.value,l=Math.min(2,Math.max(.5,r.value*.5));n.lineWidth=l;for(const s of w.value){const c=g.value[s.source.id],u=g.value[s.target.id];if(!c||!u)continue;const X=L(c.x),v=Y(c.y),T=L(u.x),P=Y(u.y),K=Math.min(X,T),Q=Math.max(X,T),ee=Math.min(v,P),ae=Math.max(v,P);Q>=e&&K<=a&&ae>=o&&ee<=t&&(n.strokeStyle=s.color,n.beginPath(),n.moveTo(X,v),n.lineTo(T,P),n.stroke())}const d=1;let i;if(r.value<=1)i=Math.max(.25,r.value*d);else{const s=Math.log10(r.value*9+1)*.7;i=Math.min(1.5,d*s)}if(r.value<.3){n.fillStyle="rgba(51, 136, 255, 0.2)",n.beginPath();for(const s of h.value){const c=L(s.x),u=Y(s.y);c>=e&&c<=a&&u>=o&&u<=t&&n.rect(c-.5,u-.5,1,1)}n.fill()}else{n.fillStyle="#3388ff";for(const s of h.value){const c=L(s.x),u=Y(s.y);c+i>=e&&c-i<=a&&u+i>=o&&u-i<=t&&(n.beginPath(),n.arc(c,u,i,0,Math.PI*2),n.fill())}}},q=e=>{e.preventDefault();const o=_.value.getBoundingClientRect(),a=e.clientX-o.left,t=e.clientY-o.top,l=(a-f.value.x)/r.value,d=(t-f.value.y)/r.value,i=e.deltaY<0?1.1:1/1.1,s=Math.max(.1,Math.min(40,r.value*i));r.value=s,f.value.x=a-l*s,f.value.y=t-d*s,requestAnimationFrame(C)},H=e=>{E.value=!0,_.value.style.cursor="grabbing",k.value={x:e.clientX,y:e.clientY}},Z=e=>{if(!E.value)return;const o=e.clientX-k.value.x,a=e.clientY-k.value.y;k.value={x:e.clientX,y:e.clientY},f.value={x:f.value.x+o,y:f.value.y+a},requestAnimationFrame(C)},D=()=>{E.value&&(E.value=!1,_.value.style.cursor="grab")},$=()=>{r.value=1,f.value={x:0,y:0},S(),requestAnimationFrame(C)},U={primary:"#ff4500",secondary:"#ffa500",tertiary:"#32cd32",residential:"#4169e1",service:"#808080",unclassified:"#9370db",motorway:"#ff0000",trunk:"#ff8c00",default:"#3388ff"},R=async()=>{b.value=!0,h.value=[],w.value=[],g.value={},n=null;try{if(await j(),await G(),J(),S(),b.value=!1,await oe(),_.value)if(n=_.value.getContext("2d"),n)console.log("Canvas 2D 上下文获取成功"),C(),W.success("地图数据加载成功");else throw new Error("无法获取Canvas 2D上下文");else throw console.error("Canvas ref (mapCanvas) 在 nextTick 后仍然无效"),new Error("Canvas元素未在DOM中找到，无法进行绘制")}catch(e){console.error("加载或绘制地图数据失败：",e),W.error(`加载地图数据失败: ${e.message}`),b.value=!1}},j=()=>new Promise((e,o)=>{B.parse("/data/node-with-latitude-longitude.csv",{download:!0,header:!0,dynamicTyping:!0,skipEmptyLines:!0,complete:a=>{console.log("节点数据样例:",a.data.slice(0,5)),console.log("节点数据列:",a.meta.fields),h.value=a.data.filter(t=>t.Id&&t.latitude&&t.longitude).map(t=>{const l={id:t.Id,latitude:parseFloat(t.latitude),longitude:parseFloat(t.longitude),x:0,y:0};return g.value[l.id]=l,l}),console.log(`成功加载 ${h.value.length} 个节点`),e()},error:a=>{console.error("加载节点数据失败:",a),o(a)}})}),G=()=>new Promise((e,o)=>{B.parse("/data/edge-with-road-label.csv",{download:!0,header:!0,dynamicTyping:!0,skipEmptyLines:!0,complete:a=>{console.log("边数据样例:",a.data.slice(0,5)),console.log("边数据列:",a.meta.fields),w.value=a.data.reduce((t,l)=>{const d=l.Source,i=l.Target;if(g.value[d]&&g.value[i]){const s=g.value[d],c=g.value[i],u=l.highwayType||"default";t.push({id:l.Id,source:s,target:c,label:l.Label||"Road",type:l.Type,highwayType:u,color:U[u]||U.default})}return t},[]),console.log(`成功加载 ${w.value.length} 条边`),e()},error:a=>{console.error("加载边数据失败:",a),o(a)}})}),J=()=>{if(h.value.length===0)return;let e=Number.MAX_VALUE,o=Number.MIN_VALUE,a=Number.MAX_VALUE,t=Number.MIN_VALUE;h.value.forEach(v=>{e=Math.min(e,v.latitude),o=Math.max(o,v.latitude),a=Math.min(a,v.longitude),t=Math.max(t,v.longitude)});const l=o-e,d=t-a,i=y.value-O*2,s=x.value-O*2,c=Math.min(i/(d||1),s/(l||1)),u=(y.value-d*c)/2,X=(x.value-l*c)/2;h.value.forEach(v=>{v.x=u+(v.longitude-a)*c,v.y=X+(s-(v.latitude-e)*c)})},S=()=>{if(r.value=1,h.value.length>0){let e=Number.MAX_VALUE,o=Number.MIN_VALUE,a=Number.MAX_VALUE,t=Number.MIN_VALUE;h.value.forEach(i=>{e=Math.min(e,i.x),o=Math.max(o,i.x),a=Math.min(a,i.y),t=Math.max(t,i.y)});const l=o-e,d=t-a;f.value={x:(y.value-l)/2-e,y:(x.value-d)/2-a}}else f.value={x:0,y:0}};return te(()=>{setTimeout(()=>{R()},500)}),(e,o)=>{const a=A("el-icon"),t=A("el-button"),l=A("el-skeleton"),d=A("el-card");return I(),V("div",ie,[M(d,{class:"map-card"},{header:N(()=>[p("div",ce,[o[1]||(o[1]=p("h2",null,"地图可视化",-1)),p("div",ue,[M(t,{type:"primary",size:"small",loading:b.value,onClick:R},{default:N(()=>[M(a,null,{default:N(()=>[M(le(ne))]),_:1}),o[0]||(o[0]=z(" 加载数据 "))]),_:1},8,["loading"])])])]),default:N(()=>[b.value?(I(),V("div",re,[M(l,{rows:10,animated:""})])):(I(),V("div",de,[p("div",ve,[p("p",null,"已加载节点: "+F(h.value.length),1),p("p",null,"已加载边: "+F(w.value.length),1)]),p("div",me,[p("canvas",{ref_key:"mapCanvas",ref:_,width:y.value,height:x.value,onWheel:q,onMousedown:H,onMousemove:Z,onMouseup:D,onMouseleave:D,style:{cursor:"grab"}},null,40,fe),p("div",he,[p("span",null,"缩放: "+F(r.value.toFixed(1))+"x",1),M(t,{size:"small",onClick:$},{default:N(()=>o[2]||(o[2]=[z("重置视图")])),_:1})])])]))]),_:1})])}}},Me=se(pe,[["__scopeId","data-v-bd176345"]]);export{Me as default};
